plugins {
	id 'war'
}
dependencies {
	compile project(':de.wilkenk.ba')
	compile project(':de.wilkenk.ba.ide')
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.2.0"
	compile "org.webjars:jquery:2.2.3"
	compile "org.webjars:ace:1.2.2"
	providedCompile "org.eclipse.jetty:jetty-annotations:9.3.8.v20160314"
	providedCompile "org.slf4j:slf4j-simple:1.7.21"
}

def orionDir = file('src/main/webapp/orion')
def orionZip = file("$buildDir/orion/built-codeEdit.zip")
def orionUrl = 'http://download.eclipse.org/orion/drops/R-12.0-201606220105/built-codeEdit.zip'

task downloadOrion {
	onlyIf {!orionZip.exists()}
	doLast {
		orionZip.parentFile.mkdirs()
		println "Download $orionUrl"
		ant.get(src: orionUrl, dest: orionZip)
	}
	group = 'Orion'
	description = 'Download orion zip from Eclipse download page'
}

task testOrionTask {
	// println "orionDir: $orionDir"
	// println "orionZip: $orionZip"
	// println "orionUrl: $orionUrl"
	group = 'Orion'
	description = 'prints orion variables'
}

task unpackOrion(type: Copy) {
	onlyIf {!orionDir.exists()}
	dependsOn(downloadOrion)
	from(zipTree(orionZip))
	into(orionDir)
	group = 'Orion'
	description = 'unpacks orion zip from $orionZip to $orionDir'
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath,unpackOrion)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = 'de.wilkenk.ba.web.ServerLauncher'
	standardInput = System.in
	group = 'run'
	description = 'Starts an example Jetty server with your language'
}

tasks.eclipse.dependsOn(unpackOrion)
uploadArchives.enabled = false