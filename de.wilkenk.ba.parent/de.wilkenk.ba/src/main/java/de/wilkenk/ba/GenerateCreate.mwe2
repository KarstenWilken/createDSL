module de.wilkenk.ba.GenerateCreate

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "de.wilkenk.ba"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				web = {
					enabled = true
				}
				mavenLayout = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "de.wilkenk.ba.Create"
			fileExtensions = "create"

			serializer = {
				generateStub = true
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			webSupport = {
				generateHtmlExample = true
				framework = "ORION"
			}
			
//			fragment = formatting.Formatter2Fragment2 {}
//			fragment = validation.ValidatorFragment2 {}
//			fragment = scoping.ImportNamespacesScopingFragment2 {}
//		    fragment = exporting.QualifiedNamesFragment2 {}
//		    fragment = ui.labeling.LabelProviderFragment2 {}
//		    fragment = ui.outline.QuickOutlineFragment2 {}
//		    fragment = ui.outline.OutlineTreeProviderFragment2 {}
//		    fragment = ui.quickfix.QuickfixProviderFragment2 {}
//		    
//		    fragment = ui.contentAssist.ContentAssistFragment2 {}
//		    fragment = types.TypesGeneratorFragment2 {}
//			fragment = xbase.XtypeGeneratorFragment2 {}
//			fragment = xbase.XbaseGeneratorFragment2 {}
//			fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
		    
		    /* 	Language Configuration
		    	https://www.eclipse.org/Xtext/documentation/302_configuration.html
		    	beinhaltet eine Liste von fragments, die hinzugeschaltet werden koennen. .xtext muss jeweils neu generiert werden.
		    	Beim Entfernen darauf achten, dass auf alle Projekte ein clean task ausgef√ºhrt wird/wurde um alle generierten Artefakte zu entfernen.
		    */
		    
			/* all Fragments
			 * 		fragment = grammarAccess.GrammarAccessFragment2 {}
				    fragment = ecore.EMFGeneratorFragment2 {}
				    fragment = serializer.SerializerFragment2 {}
				    fragment = resourceFactory.ResourceFactoryFragment2 {}
				    fragment = parser.antlr.XtextAntlrGeneratorFragment2 {}
				    fragment = validation.ValidatorFragment2 {}
				    fragment = scoping.ImportNamespacesScopingFragment2 {}
				    fragment = exporting.QualifiedNamesFragment2 {}
				    fragment = builder.BuilderIntegrationFragment2 {}
				    fragment = generator.GeneratorFragment2 {}
				    fragment = formatting.Formatter2Fragment2 {}
				    fragment = ui.labeling.LabelProviderFragment2 {}
				    fragment = ui.outline.QuickOutlineFragment2 {}
				    fragment = ui.outline.OutlineTreeProviderFragment2 {}
				    fragment = ui.quickfix.QuickfixProviderFragment2 {}
				    fragment = ui.contentAssist.ContentAssistFragment2 {}
				    fragment = junit.Junit4Fragment2 {}
				    fragment = ui.refactoring.RefactorElementNameFragment2 {}
				    fragment = types.TypesGeneratorFragment2 {}
				    fragment = xbase.XtypeGeneratorFragment2 {}
				    fragment = xbase.XbaseGeneratorFragment2 {}
				    fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
				    fragment = ui.compare.CompareFragment2 {}
				    fragment = idea.parser.antlr.XtextAntlrIDEAGeneratorFragment {}
				    fragment = idea.IdeaPluginGenerator {}
			 * 
			 */		    
		}
	}
}
