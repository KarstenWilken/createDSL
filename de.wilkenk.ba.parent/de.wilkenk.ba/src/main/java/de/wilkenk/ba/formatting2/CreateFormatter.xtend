/*
 * generated by Xtext 2.10.0
 */
package de.wilkenk.ba.formatting2

import com.google.inject.Inject
import de.wilkenk.ba.create.Domainmodel
import de.wilkenk.ba.create.Entity
import de.wilkenk.ba.create.Operation
import de.wilkenk.ba.create.Property
import de.wilkenk.ba.services.CreateGrammarAccess
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter

class CreateFormatter extends XbaseFormatter {
	
	@Inject extension CreateGrammarAccess

	def dispatch void format(Domainmodel domainmodel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		domainmodel.getImportSection.format;
		for (Entity elements : domainmodel.getElements()) {
			elements.format;
		}
	}

	def dispatch void format(de.wilkenk.ba.create.Character character, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Property properties : character.getProperties()) {
			properties.format;
		}
		for (Operation operations : character.getOperations()) {
			operations.format;
		}
	}
	
	// TODO: implement for Operation, Attribute, CombinedAttribute, CombinedAttributeRef, Addition, Multiplication, Combination, CombinationCondition, AttributeRaise, DiceBasedRaise, CombinationRaise, AddCombination, DeleteCombination, DecisionTable, Row, Condition
}
