/**
 * generated by Xtext 2.10.0
 */
package de.wilkenk.ba.create.impl;

import de.wilkenk.ba.create.Attribute;
import de.wilkenk.ba.create.Combination;
import de.wilkenk.ba.create.CombinedAttribute;
import de.wilkenk.ba.create.CreatePackage;
import de.wilkenk.ba.create.Property;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Property</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.wilkenk.ba.create.impl.PropertyImpl#getAttrValue <em>Attr Value</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.PropertyImpl#getCombAttrValue <em>Comb Attr Value</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.PropertyImpl#getCombValue <em>Comb Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropertyImpl extends MinimalEObjectImpl.Container implements Property
{
  /**
   * The cached value of the '{@link #getAttrValue() <em>Attr Value</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrValue()
   * @generated
   * @ordered
   */
  protected Attribute attrValue;

  /**
   * The cached value of the '{@link #getCombAttrValue() <em>Comb Attr Value</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCombAttrValue()
   * @generated
   * @ordered
   */
  protected CombinedAttribute combAttrValue;

  /**
   * The cached value of the '{@link #getCombValue() <em>Comb Value</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCombValue()
   * @generated
   * @ordered
   */
  protected Combination combValue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropertyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CreatePackage.Literals.PROPERTY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute getAttrValue()
  {
    if (attrValue != null && attrValue.eIsProxy())
    {
      InternalEObject oldAttrValue = (InternalEObject)attrValue;
      attrValue = (Attribute)eResolveProxy(oldAttrValue);
      if (attrValue != oldAttrValue)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CreatePackage.PROPERTY__ATTR_VALUE, oldAttrValue, attrValue));
      }
    }
    return attrValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute basicGetAttrValue()
  {
    return attrValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttrValue(Attribute newAttrValue)
  {
    Attribute oldAttrValue = attrValue;
    attrValue = newAttrValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.PROPERTY__ATTR_VALUE, oldAttrValue, attrValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CombinedAttribute getCombAttrValue()
  {
    if (combAttrValue != null && combAttrValue.eIsProxy())
    {
      InternalEObject oldCombAttrValue = (InternalEObject)combAttrValue;
      combAttrValue = (CombinedAttribute)eResolveProxy(oldCombAttrValue);
      if (combAttrValue != oldCombAttrValue)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CreatePackage.PROPERTY__COMB_ATTR_VALUE, oldCombAttrValue, combAttrValue));
      }
    }
    return combAttrValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CombinedAttribute basicGetCombAttrValue()
  {
    return combAttrValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCombAttrValue(CombinedAttribute newCombAttrValue)
  {
    CombinedAttribute oldCombAttrValue = combAttrValue;
    combAttrValue = newCombAttrValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.PROPERTY__COMB_ATTR_VALUE, oldCombAttrValue, combAttrValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Combination getCombValue()
  {
    if (combValue != null && combValue.eIsProxy())
    {
      InternalEObject oldCombValue = (InternalEObject)combValue;
      combValue = (Combination)eResolveProxy(oldCombValue);
      if (combValue != oldCombValue)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CreatePackage.PROPERTY__COMB_VALUE, oldCombValue, combValue));
      }
    }
    return combValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Combination basicGetCombValue()
  {
    return combValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCombValue(Combination newCombValue)
  {
    Combination oldCombValue = combValue;
    combValue = newCombValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.PROPERTY__COMB_VALUE, oldCombValue, combValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CreatePackage.PROPERTY__ATTR_VALUE:
        if (resolve) return getAttrValue();
        return basicGetAttrValue();
      case CreatePackage.PROPERTY__COMB_ATTR_VALUE:
        if (resolve) return getCombAttrValue();
        return basicGetCombAttrValue();
      case CreatePackage.PROPERTY__COMB_VALUE:
        if (resolve) return getCombValue();
        return basicGetCombValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CreatePackage.PROPERTY__ATTR_VALUE:
        setAttrValue((Attribute)newValue);
        return;
      case CreatePackage.PROPERTY__COMB_ATTR_VALUE:
        setCombAttrValue((CombinedAttribute)newValue);
        return;
      case CreatePackage.PROPERTY__COMB_VALUE:
        setCombValue((Combination)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.PROPERTY__ATTR_VALUE:
        setAttrValue((Attribute)null);
        return;
      case CreatePackage.PROPERTY__COMB_ATTR_VALUE:
        setCombAttrValue((CombinedAttribute)null);
        return;
      case CreatePackage.PROPERTY__COMB_VALUE:
        setCombValue((Combination)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.PROPERTY__ATTR_VALUE:
        return attrValue != null;
      case CreatePackage.PROPERTY__COMB_ATTR_VALUE:
        return combAttrValue != null;
      case CreatePackage.PROPERTY__COMB_VALUE:
        return combValue != null;
    }
    return super.eIsSet(featureID);
  }

} //PropertyImpl
