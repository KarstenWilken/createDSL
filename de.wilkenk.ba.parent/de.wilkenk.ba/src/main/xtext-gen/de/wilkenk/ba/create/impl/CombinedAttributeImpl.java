/**
 * generated by Xtext 2.10.0
 */
package de.wilkenk.ba.create.impl;

import de.wilkenk.ba.create.Category;
import de.wilkenk.ba.create.CombinedAttribute;
import de.wilkenk.ba.create.CreatePackage;
import de.wilkenk.ba.create.MathExpression;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Combined Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.wilkenk.ba.create.impl.CombinedAttributeImpl#getMinValue <em>Min Value</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.CombinedAttributeImpl#getMaxValue <em>Max Value</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.CombinedAttributeImpl#getCombValue <em>Comb Value</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.CombinedAttributeImpl#getCategory <em>Category</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.CombinedAttributeImpl#getDescription <em>Description</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CombinedAttributeImpl extends EntityImpl implements CombinedAttribute
{
  /**
   * The default value of the '{@link #getMinValue() <em>Min Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinValue()
   * @generated
   * @ordered
   */
  protected static final int MIN_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinValue() <em>Min Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinValue()
   * @generated
   * @ordered
   */
  protected int minValue = MIN_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxValue() <em>Max Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxValue()
   * @generated
   * @ordered
   */
  protected static final int MAX_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxValue() <em>Max Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxValue()
   * @generated
   * @ordered
   */
  protected int maxValue = MAX_VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getCombValue() <em>Comb Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCombValue()
   * @generated
   * @ordered
   */
  protected MathExpression combValue;

  /**
   * The cached value of the '{@link #getCategory() <em>Category</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategory()
   * @generated
   * @ordered
   */
  protected Category category;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CombinedAttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CreatePackage.Literals.COMBINED_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMinValue()
  {
    return minValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinValue(int newMinValue)
  {
    int oldMinValue = minValue;
    minValue = newMinValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__MIN_VALUE, oldMinValue, minValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMaxValue()
  {
    return maxValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxValue(int newMaxValue)
  {
    int oldMaxValue = maxValue;
    maxValue = newMaxValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__MAX_VALUE, oldMaxValue, maxValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathExpression getCombValue()
  {
    return combValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCombValue(MathExpression newCombValue, NotificationChain msgs)
  {
    MathExpression oldCombValue = combValue;
    combValue = newCombValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE, oldCombValue, newCombValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCombValue(MathExpression newCombValue)
  {
    if (newCombValue != combValue)
    {
      NotificationChain msgs = null;
      if (combValue != null)
        msgs = ((InternalEObject)combValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE, null, msgs);
      if (newCombValue != null)
        msgs = ((InternalEObject)newCombValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE, null, msgs);
      msgs = basicSetCombValue(newCombValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE, newCombValue, newCombValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Category getCategory()
  {
    if (category != null && category.eIsProxy())
    {
      InternalEObject oldCategory = (InternalEObject)category;
      category = (Category)eResolveProxy(oldCategory);
      if (category != oldCategory)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CreatePackage.COMBINED_ATTRIBUTE__CATEGORY, oldCategory, category));
      }
    }
    return category;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Category basicGetCategory()
  {
    return category;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCategory(Category newCategory)
  {
    Category oldCategory = category;
    category = newCategory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__CATEGORY, oldCategory, category));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.COMBINED_ATTRIBUTE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE:
        return basicSetCombValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CreatePackage.COMBINED_ATTRIBUTE__MIN_VALUE:
        return getMinValue();
      case CreatePackage.COMBINED_ATTRIBUTE__MAX_VALUE:
        return getMaxValue();
      case CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE:
        return getCombValue();
      case CreatePackage.COMBINED_ATTRIBUTE__CATEGORY:
        if (resolve) return getCategory();
        return basicGetCategory();
      case CreatePackage.COMBINED_ATTRIBUTE__DESCRIPTION:
        return getDescription();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CreatePackage.COMBINED_ATTRIBUTE__MIN_VALUE:
        setMinValue((Integer)newValue);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__MAX_VALUE:
        setMaxValue((Integer)newValue);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE:
        setCombValue((MathExpression)newValue);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__CATEGORY:
        setCategory((Category)newValue);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__DESCRIPTION:
        setDescription((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.COMBINED_ATTRIBUTE__MIN_VALUE:
        setMinValue(MIN_VALUE_EDEFAULT);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__MAX_VALUE:
        setMaxValue(MAX_VALUE_EDEFAULT);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE:
        setCombValue((MathExpression)null);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__CATEGORY:
        setCategory((Category)null);
        return;
      case CreatePackage.COMBINED_ATTRIBUTE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.COMBINED_ATTRIBUTE__MIN_VALUE:
        return minValue != MIN_VALUE_EDEFAULT;
      case CreatePackage.COMBINED_ATTRIBUTE__MAX_VALUE:
        return maxValue != MAX_VALUE_EDEFAULT;
      case CreatePackage.COMBINED_ATTRIBUTE__COMB_VALUE:
        return combValue != null;
      case CreatePackage.COMBINED_ATTRIBUTE__CATEGORY:
        return category != null;
      case CreatePackage.COMBINED_ATTRIBUTE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (minValue: ");
    result.append(minValue);
    result.append(", maxValue: ");
    result.append(maxValue);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //CombinedAttributeImpl
