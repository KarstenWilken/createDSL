/**
 * generated by Xtext 2.10.0
 */
package de.wilkenk.ba.create.impl;

import de.wilkenk.ba.create.CreatePackage;
import de.wilkenk.ba.create.DecisionTable;
import de.wilkenk.ba.create.DecisionTablePart;
import de.wilkenk.ba.create.DecisionTableRef;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Decision Table Ref</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.wilkenk.ba.create.impl.DecisionTableRefImpl#getDecisionTable <em>Decision Table</em>}</li>
 *   <li>{@link de.wilkenk.ba.create.impl.DecisionTableRefImpl#getPart <em>Part</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DecisionTableRefImpl extends MinimalEObjectImpl.Container implements DecisionTableRef
{
  /**
   * The cached value of the '{@link #getDecisionTable() <em>Decision Table</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecisionTable()
   * @generated
   * @ordered
   */
  protected DecisionTable decisionTable;

  /**
   * The default value of the '{@link #getPart() <em>Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPart()
   * @generated
   * @ordered
   */
  protected static final DecisionTablePart PART_EDEFAULT = DecisionTablePart.ROW;

  /**
   * The cached value of the '{@link #getPart() <em>Part</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPart()
   * @generated
   * @ordered
   */
  protected DecisionTablePart part = PART_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DecisionTableRefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CreatePackage.Literals.DECISION_TABLE_REF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DecisionTable getDecisionTable()
  {
    if (decisionTable != null && decisionTable.eIsProxy())
    {
      InternalEObject oldDecisionTable = (InternalEObject)decisionTable;
      decisionTable = (DecisionTable)eResolveProxy(oldDecisionTable);
      if (decisionTable != oldDecisionTable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CreatePackage.DECISION_TABLE_REF__DECISION_TABLE, oldDecisionTable, decisionTable));
      }
    }
    return decisionTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DecisionTable basicGetDecisionTable()
  {
    return decisionTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDecisionTable(DecisionTable newDecisionTable)
  {
    DecisionTable oldDecisionTable = decisionTable;
    decisionTable = newDecisionTable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.DECISION_TABLE_REF__DECISION_TABLE, oldDecisionTable, decisionTable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DecisionTablePart getPart()
  {
    return part;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPart(DecisionTablePart newPart)
  {
    DecisionTablePart oldPart = part;
    part = newPart == null ? PART_EDEFAULT : newPart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CreatePackage.DECISION_TABLE_REF__PART, oldPart, part));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CreatePackage.DECISION_TABLE_REF__DECISION_TABLE:
        if (resolve) return getDecisionTable();
        return basicGetDecisionTable();
      case CreatePackage.DECISION_TABLE_REF__PART:
        return getPart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CreatePackage.DECISION_TABLE_REF__DECISION_TABLE:
        setDecisionTable((DecisionTable)newValue);
        return;
      case CreatePackage.DECISION_TABLE_REF__PART:
        setPart((DecisionTablePart)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.DECISION_TABLE_REF__DECISION_TABLE:
        setDecisionTable((DecisionTable)null);
        return;
      case CreatePackage.DECISION_TABLE_REF__PART:
        setPart(PART_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CreatePackage.DECISION_TABLE_REF__DECISION_TABLE:
        return decisionTable != null;
      case CreatePackage.DECISION_TABLE_REF__PART:
        return part != PART_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (part: ");
    result.append(part);
    result.append(')');
    return result.toString();
  }

} //DecisionTableRefImpl
